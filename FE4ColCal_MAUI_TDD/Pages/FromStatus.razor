@page "/"

<h3>ステータスから</h3>

<div class="parameters">
    <table>
        <tr>
            <th>プレイヤー</th>
        </tr>
        <tr>
            <td>HP</td>
            <td><input class="number" type="text" @bind="@hp.value" placeholder="@hp.defaultValue" /></td>
        </tr>
        <tr>
            <td>攻撃</td>
            <td><input class="number" type="text" @bind="@atc.value" placeholder="@atc.defaultValue"/></td>
        </tr>
        <tr>
            <td>命中</td>
            <td><input class="number" type="text" @bind="@hit.value" placeholder="@hit.defaultValue"/></td>
        </tr>
        <tr>
            <td>回避</td>
            <td><input class="number" type="text" @bind="@flee.value" placeholder="@flee.defaultValue"/></td>
        </tr>
        <tr>
            <td>実際の速さ</td>
            <td><input class="number" type="text" @bind="@aspd.value" placeholder="@aspd.defaultValue"/></td>
        </tr>
        <tr>
            <td>守備(魔防)</td>
            <td><input class="number" type="text" @bind="@def.value" placeholder="@def.defaultValue"/></td>
        </tr>
        <tr>
            <td>追撃</td>
            <td><input type="checkbox" @bind="@chase" /></td>
        </tr>
        <tr>
            <td>連続</td>
            <td><input type="checkbox" @bind="@datk" /></td>
        </tr>
        <tr>
            <td>勇者武器</td>
            <td><input type="checkbox" @bind="@braveW" /></td>
        </tr>
        <tr>
            <td>必殺率</td>
            <td><input class="number" type="text" @bind="@crit.value" placeholder="@crit.defaultValue"/></td>
        </tr>
        <tr>
            <td>武器相性</td>
            <td>
                <select @bind="@comp">
                    <option>有利</option>
                    <option>普通</option>
                    <option>不利</option>
                </select>
            </td>
        </tr>
        <tr>
            <td>魔法攻撃</td>
            <td>
                <input type="checkbox" @bind="@matk" />
            </td>
        </tr>
    </table>
    <table>
        <tr>
            <th>相手</th>
        </tr>
        <tr>
            <td>章</td>
            <td>
                <select @bind="@chapter">
                    <option>１章</option>
                    <option>２章</option>
                    <option>３章</option>
                    <option>４章</option>
                    <option>５章</option>
                </select>
            </td>
        </tr>
        <tr>
            <td>レベル</td>
            <td>
                <input type="number" min="1" max="7" @bind="@elevel" />
            </td>
        </tr>
    </table>
</div>

<div style="text-align:center;">
    <input type="button" value="計算" @onclick="CalcWinrate" /><br/>
    勝率は @winrate % です。
</div>

@code
{
    private ParameterValue<string> hp = new ParameterValue<string>("35", "");
    private ParameterValue<string> atc = new ParameterValue<string>("24", "");
    private ParameterValue<string> hit = new ParameterValue<string>("92", "");
    private ParameterValue<string> flee = new ParameterValue<string>("25", "");
    private ParameterValue<string> aspd = new ParameterValue<string>("9", "");
    private ParameterValue<string> def = new ParameterValue<string>("9", "");
    private bool chase = true;
    private bool datk = false;
    private bool braveW = false;
    private ParameterValue<string> crit = new ParameterValue<string>("0", "");
    private string comp = "有利";
    private bool matk = false;

    private string chapter = "１章";
    private int elevel = 1;

    private string winrate = "";

    //プレースホルダがあるパラメータ向けの値
    class ParameterValue<T> where T: IComparable, IConvertible, IComparable<T>, IEquatable<T>
    {
        public T defaultValue;
        public T value;

        T emptyValue;

        public ParameterValue(T defaultValue, T emptyValue)
        {
            this.defaultValue = defaultValue;
            this.value = emptyValue;
            this.emptyValue = emptyValue;
        }

        public T GetValue()
        {
            return value.CompareTo(emptyValue) == 0 ? defaultValue : value;
        }
    }

    private void CalcWinrate()
    {

        //TODO 入力値の数値チェック

        ColCalModel model = new ColCalModel();
        LoadEnemy.Parameter enemySource = LoadEnemy.LoadEnemyParam(1, elevel);
        ColCalModel.Parameter enemyParameter = new ColCalModel.Parameter()
        {
            hp = enemySource.hp,
            atc = enemySource.atc,
            hit = enemySource.hit,
            def = enemySource.def,
            aspd = enemySource.aspd,
            chase = enemySource.chase,
            datk = enemySource.datk,
            braveW = enemySource.braveW,
            crit = enemySource.crit,
            shield = enemySource.shield,
        };
        enemyParameter.hit = Math.Clamp(
            enemyParameter.hit
            - int.Parse(this.flee.GetValue())
            - ColCalModel.ARENA_FIELD_EFFECT
            + (comp == "有利" ? -20 : comp == "普通" ? 0 : +20),
            0, 100);

        float wr = model.Calc(
            new ColCalModel.Parameter()
            {
                hp = int.Parse(this.hp.GetValue()),
                atc = int.Parse(this.atc.GetValue()),
                hit = Math.Clamp(int.Parse(this.hit.GetValue())
                    - ColCalModel.ARENA_FIELD_EFFECT //闘技場地形効果
                    + (comp == "有利" ? +20 : comp == "普通" ? 0 : -20)
                    - enemySource.flee,
                    0, 100),
                aspd = int.Parse(this.aspd.GetValue()),
                def = int.Parse(this.def.GetValue()),
                chase = this.chase,
                datk = this.datk,
                braveW = this.braveW,
                crit = int.Parse(this.crit.GetValue()),
                shield = 0
            },
            enemyParameter
        );
        winrate = (wr * 100).ToString();
    }
}

